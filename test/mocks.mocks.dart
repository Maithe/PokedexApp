// Mocks generated by Mockito 5.4.4 from annotations
// in pokedexapp/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:pokedexapp/pokemon/data/datasources/pokemon_api_service.dart'
    as _i6;
import 'package:pokedexapp/pokemon/domain/entities/pokemon.dart' as _i5;
import 'package:pokedexapp/pokemon/domain/entities/pokemon_detail.dart' as _i2;
import 'package:pokedexapp/pokemon/domain/repositories/pokemon_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemonDetail_0 extends _i1.SmartFake implements _i2.PokemonDetail {
  _FakePokemonDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i3.PokemonRepository {
  MockPokemonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Pokemon>> fetchPokemons() => (super.noSuchMethod(
        Invocation.method(
          #fetchPokemons,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Pokemon>>.value(<_i5.Pokemon>[]),
      ) as _i4.Future<List<_i5.Pokemon>>);

  @override
  _i4.Future<_i2.PokemonDetail> getPokemonDetail(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemonDetail,
          [name],
        ),
        returnValue: _i4.Future<_i2.PokemonDetail>.value(_FakePokemonDetail_0(
          this,
          Invocation.method(
            #getPokemonDetail,
            [name],
          ),
        )),
      ) as _i4.Future<_i2.PokemonDetail>);
}

/// A class which mocks [PokemonAPIService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonAPIService extends _i1.Mock implements _i6.PokemonAPIService {
  MockPokemonAPIService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i4.Future<List<_i5.Pokemon>> fetchPokemons() => (super.noSuchMethod(
        Invocation.method(
          #fetchPokemons,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Pokemon>>.value(<_i5.Pokemon>[]),
      ) as _i4.Future<List<_i5.Pokemon>>);

  @override
  _i4.Future<_i2.PokemonDetail> fetchPokemonDetail(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPokemonDetail,
          [name],
        ),
        returnValue: _i4.Future<_i2.PokemonDetail>.value(_FakePokemonDetail_0(
          this,
          Invocation.method(
            #fetchPokemonDetail,
            [name],
          ),
        )),
      ) as _i4.Future<_i2.PokemonDetail>);
}
